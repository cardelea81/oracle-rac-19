---
# Oracle Users and Groups Configuration

- name: Create Oracle groups
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
    state: present
  loop: "{{ oracle_groups }}"
  tags: oracle_groups

- name: Create Oracle directory structure
  file:
    path: "{{ item }}"
    state: directory
    mode: '0775'
  loop:
    - "{{ oracle_base }}"
    - "{{ oracle_grid_home }}"
    - "{{ grid_base }}"
    - "{{ oracle_db_home }}"
    - "/services/oracle/gridhome"
    - "/services/oracle/orahome"
    - "/services/oracle/dbz"
  tags: oracle_directories

- name: Create grid user
  user:
    name: grid
    uid: "{{ oracle_users.grid.uid }}"
    group: "{{ oracle_users.grid.primary_group }}"
    groups: "{{ oracle_users.grid.secondary_groups }}"
    shell: /bin/bash
    home: "{{ oracle_users.grid.home }}"
    state: present
    append: yes
  tags: grid_user

- name: Create oracle user
  user:
    name: oracle
    uid: "{{ oracle_users.oracle.uid }}"
    group: "{{ oracle_users.oracle.primary_group }}"
    groups: "{{ oracle_users.oracle.secondary_groups }}"
    shell: /bin/bash
    home: "{{ oracle_users.oracle.home }}"
    state: present
    append: yes
  tags: oracle_user


- name: Set permissions for Oracle base directory
  file:
    path: "{{ oracle_base }}"
    state: directory
    recurse: yes
    owner: oracle
    group: oinstall
    mode: '0775'
  tags: oracle_permissions

- name: Set permissions for Grid directories
  file:
    path: "{{ item }}"
    state: directory
    recurse: yes
    owner: grid
    group: oinstall
  loop:
    - "{{ oracle_grid_home | dirname }}"
    - "{{ oracle_users.grid.home }}"
  tags: grid_permissions


- name: Generate SSH keys for oracle user
  user:
    name: oracle
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
  tags: oracle_ssh

- name: Generate SSH keys for grid user
  user:
    name: grid
    generate_ssh_key: yes
    ssh_key_bits: 2048
    ssh_key_file: .ssh/id_rsa
  tags: grid_ssh

- name: Read oracle public key
  slurp:
    src: /services/oracle/orahome/.ssh/id_rsa.pub
  register: oracle_public_key
  tags: oracle_ssh_copy

- name: Read grid public key  
  slurp:
    src: /services/oracle/gridhome/.ssh/id_rsa.pub
  register: grid_public_key
  tags: grid_ssh_copy

- name: Copy oracle SSH public key to all other RAC nodes
  authorized_key:
    user: oracle
    key: "{{ hostvars[item]['oracle_public_key']['content'] | b64decode }}"
    state: present
  with_items: "{{ groups['oracle_rac'] }}"
  when: item != inventory_hostname
  tags: oracle_ssh_copy

- name: Copy grid SSH public key to all other RAC nodes
  authorized_key:
    user: grid
    key: "{{ hostvars[item]['grid_public_key']['content'] | b64decode }}"
    state: present
  with_items: "{{ groups['oracle_rac'] }}"
  when: item != inventory_hostname
  tags: grid_ssh_copy

- name: Add localhost to known_hosts for oracle user
  known_hosts:
    name: "{{ item }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -H ' + item) }}"
    path: /services/oracle/orahome/.ssh/known_hosts
  with_items: "{{ groups['oracle_rac'] }}"
  become_user: oracle
  tags: oracle_known_hosts

- name: Add localhost to known_hosts for grid user
  known_hosts:
    name: "{{ item }}"
    key: "{{ lookup('pipe', 'ssh-keyscan -H ' + item) }}"
    path: /services/oracle/gridhome/.ssh/known_hosts
  with_items: "{{ groups['oracle_rac'] }}"
  become_user: grid
  tags: grid_known_hosts

- name: Test SSH connectivity for oracle user
  shell: ssh -o BatchMode=yes -o ConnectTimeout=5 oracle@{{ item }} 'echo "SSH connection successful from $(hostname) to {{ item }}"'
  with_items: "{{ groups['oracle_rac'] }}"
  when: item != inventory_hostname
  become_user: oracle
  register: oracle_ssh_test
  ignore_errors: yes
  tags: ssh_test

- name: Test SSH connectivity for grid user
  shell: ssh -o BatchMode=yes -o ConnectTimeout=5 grid@{{ item }} 'echo "SSH connection successful from $(hostname) to {{ item }}"'
  with_items: "{{ groups['oracle_rac'] }}"
  when: item != inventory_hostname
  become_user: grid
  register: grid_ssh_test
  ignore_errors: yes
  tags: ssh_test

- name: Display SSH test results for oracle
  debug:
    msg: "Oracle SSH test: {{ item.stdout | default(item.stderr) }}"
  with_items: "{{ oracle_ssh_test.results }}"
  when: oracle_ssh_test is defined and not item.skipped | default(false)
  tags: ssh_test

- name: Display SSH test results for grid  
  debug:
    msg: "Grid SSH test: {{ item.stdout | default(item.stderr) }}"
  with_items: "{{ grid_ssh_test.results }}"
  when: grid_ssh_test is defined and not item.skipped | default(false)
  tags: ssh_test

- name: Set passwords for Oracle users
  shell: "echo {{ item.value.password }} | passwd --stdin {{ item.key }}"
  loop: "{{ oracle_users | dict2items }}"
  no_log: true
  tags: user_passwords 
