---
# Node 1 Specific Configuration

- name: Debug node1 configuration
  debug:
    msg: |
      Current user: {{ ansible_user_id | default('unknown') }}
      Grid home directory: /services/oracle/gridhome
      Oracle home directory: /services/oracle/orahome  
      Group names: {{ group_names }}
      Inventory hostname: {{ inventory_hostname }}
  tags: debug_node1

- name: Ensure grid home directory exists
  file:
    path: /services/oracle/gridhome
    state: directory
    owner: grid
    group: oinstall
    mode: '0755'
  tags: grid_profile

- name: Ensure oracle home directory exists
  file:
    path: /services/oracle/orahome
    state: directory
    owner: oracle
    group: oinstall
    mode: '0755'
  tags: oracle_profile

- name: Update bash profile for grid user on node1
  template:
    src: templates/grid_bashrc_node1.j2
    dest: /services/oracle/gridhome/.bash_profile
    owner: grid
    group: oinstall
    mode: '0644'
  tags: grid_profile

- name: Update bash profile for oracle user on node1
  template:
    src: templates/oracle_bashrc_node1.j2
    dest: /services/oracle/orahome/.bash_profile
    owner: oracle
    group: oinstall
    mode: '0644'
  tags: oracle_profile

- name: Verify bash profiles were created successfully
  stat:
    path: "{{ item }}"
  register: bash_profiles_check
  with_items:
    - /services/oracle/gridhome/.bash_profile
    - /services/oracle/orahome/.bash_profile
  tags: verify_profiles

- name: Display bash profile creation results
  debug:
    msg: |
      Profile: {{ item.item }}
      Exists: {{ item.stat.exists }}
      Size: {{ item.stat.size | default('N/A') }} bytes
      Owner: {{ item.stat.pw_name | default('unknown') }}
      Group: {{ item.stat.gr_name | default('unknown') }}
  with_items: "{{ bash_profiles_check.results }}"
  tags: verify_profiles

- name: Display sample grid profile content
  shell: head -10 /services/oracle/gridhome/.bash_profile
  register: grid_profile_content
  ignore_errors: yes
  tags: verify_profiles

- name: Show grid profile content
  debug:
    var: grid_profile_content.stdout_lines
  when: grid_profile_content is defined and grid_profile_content.rc == 0
  tags: verify_profiles



- name: Download Oracle Grid Infrastructure
  get_url:
    url: "{{ oracle_software_urls.grid }}"
    dest: /tmp/LINUX.X64_193000_grid_home.zip
    owner: grid
    group: dba
    mode: '0644'
    timeout: 3600
  tags: grid_download

- name: Extract Oracle Grid Infrastructure
  unarchive:
    src: /tmp/LINUX.X64_193000_grid_home.zip
    dest: "{{ oracle_grid_home }}"
    remote_src: yes
    owner: grid
    group: dba
  tags: grid_extract

- name: Download Oracle Database Software
  get_url:
    url: "{{ oracle_software_urls.database }}"
    dest: /tmp/LINUX.X64_193000_db_home.zip
    owner: oracle
    group: dba
    mode: '0644'
    timeout: 3600
  tags: db_download

- name: Extract Oracle Database Software
  unarchive:
    src: /tmp/LINUX.X64_193000_db_home.zip
    dest: "{{ oracle_db_home }}"
    remote_src: yes
    owner: oracle
    group: dba
  tags: db_extract

- name: Clean up downloaded archives
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/LINUX.X64_193000_grid_home.zip
    - /tmp/LINUX.X64_193000_db_home.zip
  tags: cleanup_archives

- name: Copy Grid response file
  template:
    src: templates/grid.rsp.j2
    dest: "{{ oracle_grid_home }}/install/response/grid.rsp"
    owner: grid
    group: oinstall
    mode: '0644'
  tags: grid_response

- name: Copy Database response file
  template:
    src: templates/db.rsp.j2
    dest: "{{ oracle_db_home }}/install/response/db.rsp"
    owner: oracle
    group: oinstall
    mode: '0644'
  tags: db_response 